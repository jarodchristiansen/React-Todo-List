{"version":3,"sources":["Components/layout/header.js","Components/AddTodo.js","Components/TodoItem.js","Components/Todos.js","Components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","react_default","a","createElement","style","react_router_dom","to","AddTodo","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","title","onSubmit","e","preventDefault","props","addTodo","setState","onChange","defineProperty","target","name","value","inherits","createClass","key","display","type","flex","placeholder","className","Component","TodoItem","getStyle","borderBottom","todo","completed","_this$props$todo","id","markComplete","bind","onClick","delTodo","btnStyle","border","borderRadius","cursor","float","Todos","todos","map","Components_TodoItem","React","About","Fragment","App","toConsumableArray","filter","newTodo","_this2","axios","get","then","res","data","_this3","header","react_router","exact","path","render","Components_AddTodo","Components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.886c73cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Header() {\r\n return (\r\n     <header style={headerStyle}>\r\n         <h1>TodoList</h1>\r\n         <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">\r\n         About </Link>\r\n     </header>\r\n ) \r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddTodo extends Component {\r\n  state = {\r\n    title: ''\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({ title: '' });\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n        <input \r\n          type=\"text\" \r\n          name=\"title\" \r\n          style={{ flex: '10', padding: '5px' }}\r\n          placeholder=\"Add Todo ...\" \r\n          value={this.state.title}\r\n          onChange={this.onChange}\r\n        />\r\n        <input \r\n          type=\"submit\" \r\n          value=\"Submit\" \r\n          className=\"btn\"\r\n          style={{flex: '1'}}\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport class TodoItem extends Component {\r\n   getStyle = () => {\r\n    return {\r\n        background: '#f4f4f4',\r\n        padding: '18px',\r\n        borderBottom: '1px #ccc dotted',\r\n        textDecoration: this.props.todo.completed ?\r\n        'line-through' : 'none'\r\n    }\r\n   }\r\n   \r\n\r\n\r\n\r\n    render() {\r\n        const { id, title } = this.props.todo;\r\n        return (\r\n            <div style={this.getStyle()}>\r\n            <p>\r\n            <input type=\"checkbox\"  onChange={this.props.markComplete.bind(this, id)}/> {' '}\r\n            { title }\r\n            <button onClick={this.props.delTodo.bind(this, id)}style={btnStyle}>x</button>\r\n            </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//PropTypes\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n  }\r\n\r\n  const btnStyle = {\r\n    background: '#ff0000',\r\n    color: \"#fff\",\r\n    border: 'none',\r\n    padding: '5px 8px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n}\r\n\r\nexport default TodoItem\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends React.Component {\r\n\r\n  \r\n  \r\n  render() {\r\n\r\n      return this.props.todos.map((todo) => (\r\n        <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete}\r\n        delTodo={this.props.delTodo} />\r\n        )); \r\n   \r\n }\r\n}\r\n// PropTypes\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired\r\n}\r\nexport default Todos;\r\n","import React from 'react'\r\n\r\n function About() {\r\n    return (\r\n        <React.Fragment>\r\n        <h1>About</h1>\r\n    <p> This is the TodoList app v1.0.0. It is part of a React crash course</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default About;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './Components/layout/header';\nimport './App.css';\nimport AddTodo from './Components/AddTodo.js';\nimport Todos from './Components/Todos.js';\nimport About from './Components/pages/About';\nimport axios from 'axios';\nclass App extends React.Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({ todos: res.data }))\n  }\n  // Togggle\nmarkComplete = (id) => {\n  this.setState({ todos: this.state.todos.map(todo => {\n    if(todo.id === id) {\n      todo.completed = !todo.completed \n    }\n    return todo;\n  }) });  \n}\n\n//Delete Todo\ndelTodo = (id) => {\n this.setState({ todos:  [...this.state.todos.filter(todo => todo.id\n  !== id)] });\n}\n// Add Todo\naddTodo = (title) => {\n  const newTodo = {\n    id: 4,\n    title, \n    completed: false\n  }\n  this.setState({  todos: [...this.state.todos, newTodo] });\n}\n\nrender() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <div className=\"contianer\">\n    <Header />\n    <Route exact path=\"/\" render={props => (\n      <React.Fragment>\n  <AddTodo addTodo={this.AddTodo} />\n    <Todos todos={this.state.todos} markComplete={this.markComplete}\n    delTodo={this.delTodo}/>\n      </React.Fragment>\n    )} /> \n  <Route path =\"/about\" component={About} />\n\n\n  \n    </div>    \n    </div>\n    </Router>\n\n  );\n}}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}